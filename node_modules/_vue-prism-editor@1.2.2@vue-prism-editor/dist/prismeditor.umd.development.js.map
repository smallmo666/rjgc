{"version":3,"file":"prismeditor.umd.development.js","sources":["../src/Editor.ts"],"sourcesContent":["import Vue, { VNode } from 'vue';\n\nimport './styles.css';\nconst KEYCODE_ENTER = 13;\nconst KEYCODE_TAB = 9;\nconst KEYCODE_BACKSPACE = 8;\nconst KEYCODE_Y = 89;\nconst KEYCODE_Z = 90;\nconst KEYCODE_M = 77;\nconst KEYCODE_PARENS = 57;\nconst KEYCODE_BRACKETS = 219;\nconst KEYCODE_QUOTE = 222;\nconst KEYCODE_BACK_QUOTE = 192;\nconst KEYCODE_ESCAPE = 27;\n\nconst HISTORY_LIMIT = 100;\nconst HISTORY_TIME_GAP = 3000;\n\nconst isWindows = 'navigator' in global && /Win/i.test(navigator.platform);\nconst isMacLike = 'navigator' in global && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\nexport interface EditorProps {\n  lineNumbers: boolean;\n  autoStyleLineNumbers: boolean;\n  readonly: boolean;\n  value: string;\n  highlight: () => string;\n  tabSize: number;\n  insertSpaces: boolean;\n  ignoreTabKey: boolean;\n  placeholder: string;\n}\nexport interface Record {\n  value: string;\n  selectionStart: number;\n  selectionEnd: number;\n}\n\nexport interface History {\n  stack: Array<Record & { timestamp: number }>;\n  offset: number;\n}\n\nexport const PrismEditor = Vue.extend({\n  props: {\n    lineNumbers: {\n      type: Boolean,\n      default: false,\n    },\n    autoStyleLineNumbers: {\n      type: Boolean,\n      default: true,\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    value: {\n      type: String,\n      default: '',\n    },\n    highlight: {\n      type: Function,\n      required: true,\n    },\n    tabSize: {\n      type: Number,\n      default: 2,\n    },\n    insertSpaces: {\n      type: Boolean,\n      default: true,\n    },\n    ignoreTabKey: {\n      type: Boolean,\n      default: false,\n    },\n    placeholder: {\n      type: String,\n      default: '',\n    },\n  },\n  data() {\n    return {\n      capture: true,\n      history: {\n        stack: [],\n        offset: -1,\n      } as History,\n      lineNumbersHeight: '20px',\n      codeData: '',\n    };\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler(newVal: string): void {\n        if (!newVal) {\n          this.codeData = '';\n        } else {\n          this.codeData = newVal;\n        }\n      },\n    },\n    content: {\n      immediate: true,\n      handler(): void {\n        if (this.lineNumbers) {\n          this.$nextTick(() => {\n            this.setLineNumbersHeight();\n          });\n        }\n      },\n    },\n    lineNumbers(): void {\n      this.$nextTick(() => {\n        this.styleLineNumbers();\n        this.setLineNumbersHeight();\n      });\n    },\n  },\n  computed: {\n    isEmpty(): boolean {\n      return this.codeData.length === 0;\n    },\n    content(): string {\n      const result = this.highlight(this.codeData) + '<br />';\n      // todo: VNode support?\n      return result;\n    },\n    lineNumbersCount(): number {\n      const totalLines = this.codeData.split(/\\r\\n|\\n/).length;\n      return totalLines;\n    },\n  },\n  mounted() {\n    this._recordCurrentState();\n    this.styleLineNumbers();\n  },\n\n  methods: {\n    setLineNumbersHeight(): void {\n      this.lineNumbersHeight = getComputedStyle(this.$refs.pre as HTMLTextAreaElement).height;\n    },\n    styleLineNumbers(): void {\n      if (!this.lineNumbers || !this.autoStyleLineNumbers) return;\n\n      const $editor = this.$refs.pre as HTMLTextAreaElement;\n      const $lineNumbers: HTMLDivElement | null = this.$el.querySelector('.prism-editor__line-numbers');\n      const editorStyles = window.getComputedStyle($editor);\n\n      this.$nextTick(() => {\n        const btlr: any = 'border-top-left-radius';\n        const bblr: any = 'border-bottom-left-radius';\n        if (!$lineNumbers) return;\n        $lineNumbers.style[btlr] = editorStyles[btlr];\n        $lineNumbers.style[bblr] = editorStyles[bblr];\n        $editor.style[btlr] = '0';\n        $editor.style[bblr] = '0';\n\n        const stylesList = ['background-color', 'margin-top', 'padding-top', 'font-family', 'font-size', 'line-height'];\n        stylesList.forEach((style: any) => {\n          $lineNumbers.style[style] = editorStyles[style];\n        });\n        $lineNumbers.style['margin-bottom' as any] = '-' + editorStyles['padding-top' as any];\n      });\n    },\n    _recordCurrentState(): void {\n      const input = this.$refs.textarea as HTMLTextAreaElement;\n\n      if (!input) return;\n      // Save current state of the input\n      const { value, selectionStart, selectionEnd } = input;\n\n      this._recordChange({\n        value,\n        selectionStart,\n        selectionEnd,\n      });\n    },\n    _getLines(text: string, position: number): Array<string> {\n      return text.substring(0, position).split('\\n');\n    },\n    _applyEdits(record: Record): void {\n      // Save last selection state\n      const input = this.$refs.textarea as HTMLTextAreaElement;\n      const last = this.history.stack[this.history.offset];\n\n      if (last && input) {\n        this.history.stack[this.history.offset] = {\n          ...last,\n          selectionStart: input.selectionStart,\n          selectionEnd: input.selectionEnd,\n        };\n      }\n\n      // Save the changes\n      this._recordChange(record);\n      this._updateInput(record);\n    },\n    _recordChange(record: Record, overwrite = false): void {\n      const { stack, offset } = this.history;\n\n      if (stack.length && offset > -1) {\n        // When something updates, drop the redo operations\n        this.history.stack = stack.slice(0, offset + 1);\n\n        // Limit the number of operations to 100\n        const count = this.history.stack.length;\n\n        if (count > HISTORY_LIMIT) {\n          const extras = count - HISTORY_LIMIT;\n\n          this.history.stack = stack.slice(extras, count);\n          this.history.offset = Math.max(this.history.offset - extras, 0);\n        }\n      }\n\n      const timestamp = Date.now();\n\n      if (overwrite) {\n        const last = this.history.stack[this.history.offset];\n\n        if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n          // A previous entry exists and was in short interval\n\n          // Match the last word in the line\n          const re = /[^a-z0-9]([a-z0-9]+)$/i;\n\n          // Get the previous line\n          const previous = this._getLines(last.value, last.selectionStart).pop()?.match(re);\n\n          // Get the current line\n          const current = this._getLines(record.value, record.selectionStart).pop()?.match(re);\n\n          if (previous && current && current[1].startsWith(previous[1])) {\n            // The last word of the previous line and current line match\n            // Overwrite previous entry so that undo will remove whole word\n            this.history.stack[this.history.offset] = {\n              ...record,\n              timestamp,\n            };\n\n            return;\n          }\n        }\n      }\n\n      // Add the new operation to the stack\n      this.history.stack.push({ ...record, timestamp });\n      this.history.offset++;\n    },\n\n    _updateInput(record: Record): void {\n      const input = this.$refs.textarea as HTMLTextAreaElement;\n\n      if (!input) return;\n\n      // Update values and selection state\n      input.value = record.value;\n      input.selectionStart = record.selectionStart;\n      input.selectionEnd = record.selectionEnd;\n\n      this.$emit('input', record.value);\n      // this.props.onValueChange(record.value);\n    },\n    handleChange(e: KeyboardEvent): void {\n      const { value, selectionStart, selectionEnd } = e.target as HTMLTextAreaElement;\n\n      this._recordChange(\n        {\n          value,\n          selectionStart,\n          selectionEnd,\n        },\n        true\n      );\n      this.$emit('input', value);\n      // this.props.onValueChange(value);\n    },\n    _undoEdit(): void {\n      const { stack, offset } = this.history;\n\n      // Get the previous edit\n      const record = stack[offset - 1];\n\n      if (record) {\n        // Apply the changes and update the offset\n        this._updateInput(record);\n        this.history.offset = Math.max(offset - 1, 0);\n      }\n    },\n    _redoEdit(): void {\n      const { stack, offset } = this.history;\n\n      // Get the next edit\n      const record = stack[offset + 1];\n\n      if (record) {\n        // Apply the changes and update the offset\n        this._updateInput(record);\n        this.history.offset = Math.min(offset + 1, stack.length - 1);\n      }\n    },\n    handleKeyDown(e: KeyboardEvent): void {\n      // console.log(navigator.platform);\n      const { tabSize, insertSpaces, ignoreTabKey } = this;\n\n      if (this.$listeners.keydown) {\n        // onKeyDown(e);\n        this.$emit('keydown', e);\n\n        if (e.defaultPrevented) {\n          return;\n        }\n      }\n\n      if (e.keyCode === KEYCODE_ESCAPE) {\n        (<HTMLTextAreaElement>e.target).blur();\n        this.$emit('blur', e);\n      }\n\n      const { value, selectionStart, selectionEnd } = e.target as HTMLTextAreaElement;\n\n      const tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\n\n      if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && this.capture) {\n        // Prevent focus change\n        e.preventDefault();\n\n        if (e.shiftKey) {\n          // Unindent selected lines\n          const linesBeforeCaret = this._getLines(value, selectionStart);\n          const startLine = linesBeforeCaret.length - 1;\n          const endLine = this._getLines(value, selectionEnd).length - 1;\n          const nextValue = value\n            .split('\\n')\n            .map((line, i) => {\n              if (i >= startLine && i <= endLine && line.startsWith(tabCharacter)) {\n                return line.substring(tabCharacter.length);\n              }\n\n              return line;\n            })\n            .join('\\n');\n\n          if (value !== nextValue) {\n            const startLineText = linesBeforeCaret[startLine];\n\n            this._applyEdits({\n              value: nextValue,\n              // Move the start cursor if first line in selection was modified\n              // It was modified only if it started with a tab\n              selectionStart: startLineText.startsWith(tabCharacter)\n                ? selectionStart - tabCharacter.length\n                : selectionStart,\n              // Move the end cursor by total number of characters removed\n              selectionEnd: selectionEnd - (value.length - nextValue.length),\n            });\n          }\n        } else if (selectionStart !== selectionEnd) {\n          // Indent selected lines\n          const linesBeforeCaret = this._getLines(value, selectionStart);\n          const startLine = linesBeforeCaret.length - 1;\n          const endLine = this._getLines(value, selectionEnd).length - 1;\n          const startLineText = linesBeforeCaret[startLine];\n\n          this._applyEdits({\n            value: value\n              .split('\\n')\n              .map((line, i) => {\n                if (i >= startLine && i <= endLine) {\n                  return tabCharacter + line;\n                }\n\n                return line;\n              })\n              .join('\\n'),\n            // Move the start cursor by number of characters added in first line of selection\n            // Don't move it if it there was no text before cursor\n            selectionStart: /\\S/.test(startLineText) ? selectionStart + tabCharacter.length : selectionStart,\n            // Move the end cursor by total number of characters added\n            selectionEnd: selectionEnd + tabCharacter.length * (endLine - startLine + 1),\n          });\n        } else {\n          const updatedSelection = selectionStart + tabCharacter.length;\n\n          this._applyEdits({\n            // Insert tab character at caret\n            value: value.substring(0, selectionStart) + tabCharacter + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection,\n          });\n        }\n      } else if (e.keyCode === KEYCODE_BACKSPACE) {\n        const hasSelection = selectionStart !== selectionEnd;\n        const textBeforeCaret = value.substring(0, selectionStart);\n\n        if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n          // Prevent default delete behaviour\n          e.preventDefault();\n\n          const updatedSelection = selectionStart - tabCharacter.length;\n\n          this._applyEdits({\n            // Remove tab character at caret\n            value: value.substring(0, selectionStart - tabCharacter.length) + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection,\n          });\n        }\n      } else if (e.keyCode === KEYCODE_ENTER) {\n        // Ignore selections\n        if (selectionStart === selectionEnd) {\n          // Get the current line\n          const line = this._getLines(value, selectionStart).pop();\n          const matches = line?.match(/^\\s+/);\n\n          if (matches && matches[0]) {\n            e.preventDefault();\n\n            // Preserve indentation on inserting a new line\n            const indent = '\\n' + matches[0];\n            const updatedSelection = selectionStart + indent.length;\n\n            this._applyEdits({\n              // Insert indentation character at caret\n              value: value.substring(0, selectionStart) + indent + value.substring(selectionEnd),\n              // Update caret position\n              selectionStart: updatedSelection,\n              selectionEnd: updatedSelection,\n            });\n          }\n        }\n      } else if (\n        e.keyCode === KEYCODE_PARENS ||\n        e.keyCode === KEYCODE_BRACKETS ||\n        e.keyCode === KEYCODE_QUOTE ||\n        e.keyCode === KEYCODE_BACK_QUOTE\n      ) {\n        let chars;\n\n        if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n          chars = ['(', ')'];\n        } else if (e.keyCode === KEYCODE_BRACKETS) {\n          if (e.shiftKey) {\n            chars = ['{', '}'];\n          } else {\n            chars = ['[', ']'];\n          }\n        } else if (e.keyCode === KEYCODE_QUOTE) {\n          if (e.shiftKey) {\n            chars = ['\"', '\"'];\n          } else {\n            chars = [\"'\", \"'\"];\n          }\n        } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n          chars = ['`', '`'];\n        }\n\n        // console.log(isMacLike, \"navigator\" in global && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform));\n\n        // If text is selected, wrap them in the characters\n        if (selectionStart !== selectionEnd && chars) {\n          e.preventDefault();\n\n          this._applyEdits({\n            value:\n              value.substring(0, selectionStart) +\n              chars[0] +\n              value.substring(selectionStart, selectionEnd) +\n              chars[1] +\n              value.substring(selectionEnd),\n            // Update caret position\n            selectionStart,\n            selectionEnd: selectionEnd + 2,\n          });\n        }\n      } else if (\n        (isMacLike\n          ? // Trigger undo with ⌘+Z on Mac\n            e.metaKey && e.keyCode === KEYCODE_Z\n          : // Trigger undo with Ctrl+Z on other platforms\n            e.ctrlKey && e.keyCode === KEYCODE_Z) &&\n        !e.shiftKey &&\n        !e.altKey\n      ) {\n        e.preventDefault();\n\n        this._undoEdit();\n      } else if (\n        (isMacLike\n          ? // Trigger redo with ⌘+Shift+Z on Mac\n            e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey\n          : isWindows\n          ? // Trigger redo with Ctrl+Y on Windows\n            e.ctrlKey && e.keyCode === KEYCODE_Y\n          : // Trigger redo with Ctrl+Shift+Z on other platforms\n            e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) &&\n        !e.altKey\n      ) {\n        e.preventDefault();\n\n        this._redoEdit();\n      } else if (e.keyCode === KEYCODE_M && e.ctrlKey && (isMacLike ? e.shiftKey : true)) {\n        e.preventDefault();\n\n        // Toggle capturing tab key so users can focus away\n        this.capture = !this.capture;\n      }\n    },\n  },\n  render(h): VNode {\n    const lineNumberWidthCalculator = h(\n      'div',\n      {\n        attrs: {\n          class: 'prism-editor__line-width-calc',\n          style: 'height: 0px; visibility: hidden; pointer-events: none;',\n        },\n      },\n      '999'\n    );\n    const lineNumbers = h(\n      'div',\n      {\n        staticClass: 'prism-editor__line-numbers',\n        style: {\n          'min-height': this.lineNumbersHeight,\n        },\n        attrs: {\n          'aria-hidden': 'true',\n        },\n      },\n      [\n        lineNumberWidthCalculator,\n        Array.from(Array(this.lineNumbersCount).keys()).map((_, index) => {\n          return h('div', { attrs: { class: 'prism-editor__line-number token comment' } }, `${++index}`);\n        }),\n      ]\n    );\n\n    const textarea = h('textarea', {\n      ref: 'textarea',\n      on: {\n        input: this.handleChange,\n        keydown: this.handleKeyDown,\n        click: ($event: MouseEvent) => {\n          this.$emit('click', $event);\n        },\n        keyup: ($event: KeyboardEvent) => {\n          this.$emit('keyup', $event);\n        },\n        focus: ($event: FocusEvent) => {\n          this.$emit('focus', $event);\n        },\n        blur: ($event: FocusEvent) => {\n          this.$emit('blur', $event);\n        },\n      },\n      staticClass: 'prism-editor__textarea',\n      class: {\n        'prism-editor__textarea--empty': this.isEmpty,\n      },\n      attrs: {\n        spellCheck: 'false',\n        autocapitalize: 'off',\n        autocomplete: 'off',\n        autocorrect: 'off',\n        'data-gramm': 'false',\n        placeholder: this.placeholder,\n        'data-testid': 'textarea',\n        readonly: this.readonly,\n      },\n      domProps: {\n        value: this.codeData,\n      },\n    });\n    const preview = h('pre', {\n      ref: 'pre',\n      staticClass: 'prism-editor__editor',\n      attrs: {\n        'data-testid': 'preview',\n      },\n      domProps: {\n        innerHTML: this.content,\n      },\n    });\n    const editorContainer = h('div', { staticClass: 'prism-editor__container' }, [textarea, preview]);\n    return h('div', { staticClass: 'prism-editor-wrapper' }, [this.lineNumbers && lineNumbers, editorContainer]);\n  },\n});\n"],"names":["KEYCODE_ENTER","KEYCODE_TAB","KEYCODE_BACKSPACE","KEYCODE_Y","KEYCODE_Z","KEYCODE_M","KEYCODE_PARENS","KEYCODE_BRACKETS","KEYCODE_QUOTE","KEYCODE_BACK_QUOTE","KEYCODE_ESCAPE","HISTORY_LIMIT","HISTORY_TIME_GAP","isWindows","global","test","navigator","platform","isMacLike","PrismEditor","Vue","extend","props","lineNumbers","type","Boolean","autoStyleLineNumbers","readonly","value","String","highlight","Function","required","tabSize","Number","insertSpaces","ignoreTabKey","placeholder","data","capture","history","stack","offset","lineNumbersHeight","codeData","watch","immediate","handler","newVal","content","$nextTick","setLineNumbersHeight","styleLineNumbers","computed","isEmpty","length","result","lineNumbersCount","totalLines","split","mounted","_recordCurrentState","methods","getComputedStyle","$refs","pre","height","$editor","$lineNumbers","$el","querySelector","editorStyles","window","btlr","bblr","style","stylesList","forEach","input","textarea","selectionStart","selectionEnd","_recordChange","_getLines","text","position","substring","_applyEdits","record","last","_updateInput","overwrite","slice","count","extras","Math","max","timestamp","Date","now","re","previous","pop","match","current","startsWith","push","$emit","handleChange","e","target","_undoEdit","_redoEdit","min","handleKeyDown","$listeners","keydown","defaultPrevented","keyCode","blur","tabCharacter","repeat","preventDefault","shiftKey","linesBeforeCaret","startLine","endLine","nextValue","map","line","i","join","startLineText","updatedSelection","hasSelection","textBeforeCaret","endsWith","matches","indent","chars","metaKey","ctrlKey","altKey","render","h","lineNumberWidthCalculator","attrs","staticClass","Array","from","keys","_","index","ref","on","click","$event","keyup","focus","spellCheck","autocapitalize","autocomplete","autocorrect","domProps","preview","innerHTML","editorContainer"],"mappings":"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"}